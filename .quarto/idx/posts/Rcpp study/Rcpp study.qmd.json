{"title":"Rcpp studying records","markdown":{"yaml":{"title":"Rcpp studying records","author":"Creo Hsia","date":"2024-10-10","format":{"html":{"code-fold":true,"code-copy":true,"code-overflow":"scroll","toc":true,"toc-depth":2,"number-sections":true,"editor":"visual"}},"knitr":{"opts_chunk":{"collapse":true,"comment":"#>"}}},"headingText":"Rcpp","containsRefs":false,"markdown":"\n\n```{r}\n#| eval: false\n#| include: false\n```\n\n\n## Format for defining a function in Rcpp\n\nThe following code shows the basic format for defining a Rcpp function.\n\n```{Rcpp}\n#| eval: false\n\n\n#include<Rcpp.h>\nusing namespace Rcpp;\n\n// [[Rcpp::export]]\nRETURN_TYPE FUNCTION_NAME(ARGUMENT_TYPE ARGUMENT){\n\n    //do something\n\n    return RETURN_VALUE;\n}\n\n```\n\n-   `#include<Rcpp.h>` : This sentence enables us to use classes and functions defined by the Rcpp package\n\n-   `using namespace Rcpp;` : this sentence enables us to use them directly, other wise you need to declare that we use these function from package Rcpp by, e.g. `Rcpp::NumericVector`.\n\n<!-- -->\n\n-   `// [[Rcpp::export]]`：The function defined just below this sentence will be accessible from R.\n\n-   `RETURN_TYPE FUNCTION_NAME(ARGUMENT_TYPE ARGUMENT){}`：We need to specify data types of functions and arguments.\n\n## Compiling the code\n\nThe function `Rcpp::sourceCpp()` will compile your source code and load the defined function into R. The below code defines a function that calculates the sum of a vector.\n\n```{Rcpp}\n#| eval: false\n//sum.cpp\n#include <Rcpp.h>\nusing namespace Rcpp;\n\n// [[Rcpp::export]]\ndouble rcpp_sum(NumericVector v){\n    double sum = 0;\n    for(int i=0; i<v.length(); ++i){\n        sum += v[i];\n    }\n    return(sum);\n}\n```\n\nNow we can load it into R by\n\n```{R}\nlibrary(Rcpp)\nsourceCpp('sum.cpp')\n```\n\n## Executing the function\n\nWe can use our Rcpp functions as usual R functions\n\n```{r}\nrcpp_sum(1:10)\n```\n\n## Embedding Rcpp code in our R code\n\nWe can write Rcpp code in our R code in 3 ways.\n\n### `sourceCpp()`\n\nSave Rcpp code as string object in R and compile it with `sourceCpp()`\n\n```{r}\nsrc <-\n\"#include <Rcpp.h>\nusing namespace Rcpp;\n// [[Rcpp::export]]\ndouble rcpp_sum(NumericVector v){\n  double sum = 0;\n  for(int i=0; i<v.length(); ++i){\n    sum += v[i];\n  }\n  return(sum);\n}\"\n\nsourceCpp(code = src)\nrcpp_sum(1:10)\n```\n\n### `cppFunction()`\n\nWe can omit `#include <Rcpp.h>` and `using namespase Rcpp` when we use `cppFunction()`.\n\n```{r}\nsrc <-\"double rcpp_sum(NumericVector v){\n    double sum = 0;\n    for(int i=0; i<v.length(); ++i){\n      sum += v[i];\n    }\n    return(sum);\n  }\n  \"\nRcpp::cppFunction(src)\nrcpp_sum(1:10)\n```\n\n### `evalCpp()`\n\nYou can evaluate a single C++ statement by using `evalCpp()`.\n\n```{r}\n# Showing maximum value of double.\nevalCpp('std::numeric_limits<double>::max()')\n```\n\n## C++ 11\n\nC++ 11 is a standard of C++ newly established in 2011. Many new features have been added to make C++ even easier for beginners.\n\n::: callout-important\nThe code examples in this document are written with C++11 enabled.\n:::\n\n### Enabling C++11\nTo enable `C++11`, add the following decription in our Rcpp code.\n> `// [[Rcpp::plugins(\"cpp11\")]]`\n\n### Recommended C++11 features\n#### Initializer list\n\n```{Rcpp}\n#| eval: false\n\n// Initialize Vector\n// The next three are the same as c (1, 2, 3).\nNumericVector v1 = NumericVector::create(1.0, 2.0, 3.0);\nNumericVector v2 = {1.0, 2.0, 3.0};\nNumericVector v3   {1.0, 2.0, 3.0}; // You can omit \"=\".\n```\n\n\n#### decltype\n\nBy using decltype, you can declare a variable of the same type as an existing variable.\n\n```{Rcpp}\n#| eval: false\n\nint i;\ndecltype(i) x; // variable \"x\" will be int\n```\n\n\n#### Range-vased for-loop\nWe can write a for statement with the same style as R.\n```{Rcpp}\n#| eval: false\nIntegerVector v {1,2,3};\nint sum=0;\nfor(auto& x : v) {\n  sum += x;\n}\n```\n\n\n\n","srcMarkdownNoYaml":"\n\n```{r}\n#| eval: false\n#| include: false\n```\n\n# Rcpp\n\n## Format for defining a function in Rcpp\n\nThe following code shows the basic format for defining a Rcpp function.\n\n```{Rcpp}\n#| eval: false\n\n\n#include<Rcpp.h>\nusing namespace Rcpp;\n\n// [[Rcpp::export]]\nRETURN_TYPE FUNCTION_NAME(ARGUMENT_TYPE ARGUMENT){\n\n    //do something\n\n    return RETURN_VALUE;\n}\n\n```\n\n-   `#include<Rcpp.h>` : This sentence enables us to use classes and functions defined by the Rcpp package\n\n-   `using namespace Rcpp;` : this sentence enables us to use them directly, other wise you need to declare that we use these function from package Rcpp by, e.g. `Rcpp::NumericVector`.\n\n<!-- -->\n\n-   `// [[Rcpp::export]]`：The function defined just below this sentence will be accessible from R.\n\n-   `RETURN_TYPE FUNCTION_NAME(ARGUMENT_TYPE ARGUMENT){}`：We need to specify data types of functions and arguments.\n\n## Compiling the code\n\nThe function `Rcpp::sourceCpp()` will compile your source code and load the defined function into R. The below code defines a function that calculates the sum of a vector.\n\n```{Rcpp}\n#| eval: false\n//sum.cpp\n#include <Rcpp.h>\nusing namespace Rcpp;\n\n// [[Rcpp::export]]\ndouble rcpp_sum(NumericVector v){\n    double sum = 0;\n    for(int i=0; i<v.length(); ++i){\n        sum += v[i];\n    }\n    return(sum);\n}\n```\n\nNow we can load it into R by\n\n```{R}\nlibrary(Rcpp)\nsourceCpp('sum.cpp')\n```\n\n## Executing the function\n\nWe can use our Rcpp functions as usual R functions\n\n```{r}\nrcpp_sum(1:10)\n```\n\n## Embedding Rcpp code in our R code\n\nWe can write Rcpp code in our R code in 3 ways.\n\n### `sourceCpp()`\n\nSave Rcpp code as string object in R and compile it with `sourceCpp()`\n\n```{r}\nsrc <-\n\"#include <Rcpp.h>\nusing namespace Rcpp;\n// [[Rcpp::export]]\ndouble rcpp_sum(NumericVector v){\n  double sum = 0;\n  for(int i=0; i<v.length(); ++i){\n    sum += v[i];\n  }\n  return(sum);\n}\"\n\nsourceCpp(code = src)\nrcpp_sum(1:10)\n```\n\n### `cppFunction()`\n\nWe can omit `#include <Rcpp.h>` and `using namespase Rcpp` when we use `cppFunction()`.\n\n```{r}\nsrc <-\"double rcpp_sum(NumericVector v){\n    double sum = 0;\n    for(int i=0; i<v.length(); ++i){\n      sum += v[i];\n    }\n    return(sum);\n  }\n  \"\nRcpp::cppFunction(src)\nrcpp_sum(1:10)\n```\n\n### `evalCpp()`\n\nYou can evaluate a single C++ statement by using `evalCpp()`.\n\n```{r}\n# Showing maximum value of double.\nevalCpp('std::numeric_limits<double>::max()')\n```\n\n## C++ 11\n\nC++ 11 is a standard of C++ newly established in 2011. Many new features have been added to make C++ even easier for beginners.\n\n::: callout-important\nThe code examples in this document are written with C++11 enabled.\n:::\n\n### Enabling C++11\nTo enable `C++11`, add the following decription in our Rcpp code.\n> `// [[Rcpp::plugins(\"cpp11\")]]`\n\n### Recommended C++11 features\n#### Initializer list\n\n```{Rcpp}\n#| eval: false\n\n// Initialize Vector\n// The next three are the same as c (1, 2, 3).\nNumericVector v1 = NumericVector::create(1.0, 2.0, 3.0);\nNumericVector v2 = {1.0, 2.0, 3.0};\nNumericVector v3   {1.0, 2.0, 3.0}; // You can omit \"=\".\n```\n\n\n#### decltype\n\nBy using decltype, you can declare a variable of the same type as an existing variable.\n\n```{Rcpp}\n#| eval: false\n\nint i;\ndecltype(i) x; // variable \"x\" will be int\n```\n\n\n#### Range-vased for-loop\nWe can write a for statement with the same style as R.\n```{Rcpp}\n#| eval: false\nIntegerVector v {1,2,3};\nint sum=0;\nfor(auto& x : v) {\n  sum += x;\n}\n```\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"toc-depth":2,"number-sections":true,"output-file":"Rcpp study.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":"visual","theme":"cosmo","title-block-banner":true,"title":"Rcpp studying records","author":"Creo Hsia","date":"2024-10-10","knitr":{"opts_chunk":{"collapse":true,"comment":"#>"}},"code-copy":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}